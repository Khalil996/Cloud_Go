import (
	"struct/login.api"
	"struct/user.api"
	"struct/file.api"
	"struct/upload.api"
	"struct/download.api"
	"struct/admin.api"
)

service Disk-api {
	@handler login
	post /login (loginReq)returns(LoginResp)
	
	@handler register
	post /register (RegisterReq) returns ()
	
	@handler EmailSend
	post /EmailSend (EmailSendReq)returns(EmailSendRes)
	
	@handler getShareInfo
	post /file/share-info (GetShareInfoReq) returns (GetShareInfoResp)
	
	@handler getDetail
	get /user/detail/:id (IdPathReq) returns ()
	
	@handler getUserInfoByShareId
	get /file/share-user/:id (IdPathReq) returns (UserInfo)
	// admin
	@handler adminLogin
	post /admin/login (loginReq) returns (LoginResp)
	
	@handler shareReport
	post /file/share-report (ReportReq) returns ()
}

@server (
	group: user
	prefix :/user
	middleware:Auth
)
service Disk-api {
	@handler updateDetail
	post /detail (UpdateUserDetailReq) returns ()
	
	@handler updateAvatar
	post /avatar () returns ()
}

@server(
	group: file
	prefix :/file
	middleware:Auth
)
service Disk-api{
	@handler getFileDetail
	get /:id (IdPathReq) returns (FileResp)
	
	@handler listFile
	get /list/:parentFolderId (parentFolderIdReq) returns ([]*FileResp)
	
	@handler listFileByType
	get /type/:fileType (FileTypeReq) returns ([]*FileResp)
	
	@handler listFolder
	get /folder-list/:parentFolderId (parentFolderIdReq) returns ([]*ListFolderStruct)
	
	@handler listFileMovableFolder
	get /move/:parentFolderId (parentFolderIdReq) returns ([]ListFolderStruct)
	
	@handler listFolderMovableFolder
	post /folder-move (ListFolderMovableFolderReq) returns ([]ListFolderStruct)
	
	@handler moveFiles
	put /move (moveFilesReq) returns ()
	
	@handler moveFolders
	put /folder-move (moveFoldersReq) returns ()
	
	@handler updateFile
	put / (UpdateNameReq) returns ()
	
	@handler updateFolder
	put /folder (UpdateNameReq) returns ()
	
	@handler copyFiles
	post /copy (CopyFilesReq) returns ()
	
	@handler deleteFiles
	put /delete (DeleteFilesReq) returns ()
	
	@handler deleteFilesTruly
	post /delete (IdsReq) returns ()
	
	@handler deleteFolders
	put /folder-delete (IdsReq) returns ()
	
	@handler deleteAllFilesTruly
	post /clear () returns ()
	
	@handler recoverFiles
	put /recover (RecoverFilesReq) returns ()
	
	@handler createFolder
	post /folder (createFolderReq) returns ()
	
	@handler listDeletedFiles
	get /delete () returns ([]*DeletedFilesResp)
	
	//分享功能
	@handler listShares
	get /share () returns ([]*ListShareStruct)
	
	@handler share
	post /share (ShareReq) returns ()
	
	@handler shareFolder
	post /share-folder (ShareFolderReq) returns ()
	
	@handler shareCancel
	post /share-cancel (IdStrsReq) returns ()
	
	@handler search
	get /search (SearchReq) returns ()
	
	@handler downloadFolder
	post /folder-download (DFReq) returns ([]string )
}

@server(
	group: upload
	prefix: /upload
	middleware: Auth
)
service Disk-api {
	// 检查该用户文件是否已存在（秒传）
	@handler checkFile
	post /check (CheckFileReq) returns (CheckFileResp)
	
	// 上传小文件
	@handler upload
	post / (UploadReq) returns ()
	
	// 检查分片
	@handler checkChunk
	post /check_chunk (CheckChunkReq) returns (CheckChunkResp)
	
	@handler uploadChunk
	post /chunk (UploadChunkReq) returns ()
}

@server(
	group: download
	prefix: /download
	middleware: Auth
)
service Disk-api {
	// 检查大小
	@handler checkSize
	post /check_size (checkSizeReq) returns (checkSizeResp)
	
	// 下载小文件
	@handler download
	post / (downloadReq) returns ()
	
	// 下载分片
	@handler chunkDownload
	post /chunk (chunkDownloadReq) returns ()
}

@server(
	group: admin
	prefix: /admin
	middleware: Auth
)
service Disk-api {
	@handler listUsers
	post /user-list (PageReq) returns ([]*UserInfo)
	
	@handler listSharesAdmin
	post /share-list (PageReq) returns ()
	
	@handler setUserStatus
	post /user-status (SetStatusReq) returns ()
	
	@handler getUrl
	get /file-url/:id/:type (GetUrlReq) returns ()
	
	@handler setFileStatus
	post /file-status (SetFileStatusReq) returns ()
	
	@handler getAdminInfo
	get /info () returns ()
	
	@handler getAdminList
	post /list (PageReq) returns ()
	
	@handler setAdminStatus
	post /status (SetStatusReq) returns ()
	
	@handler getShareInfoAdmin
	get /share-file/:id (IdStrReq) returns (GetShareInfoResp)
	
	@handler setShareStatus
	post /share-status (SetShareStatusReq) returns ()
	
	@handler addAdmin
	post /add (AddAdminReq) returns ()
	
	@handler deleteAdmin
	delete /:id (IdStrReq) returns ()
}

type (
	GetShareInfoReq {
		Id  string `json:"id"`
		Pwd string `json:"pwd"`
	}
)